services:
  traefik:
    image: traefik:latest
    container_name: traefik
    environment:
      - PUID=1000
      - PGID=100
      - TZ=Europe/Bucharest
      - DOMAIN=${DOMAIN}
      - CERTRESOLVER=${CERTRESOLVER}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /messier/apps/traefik/config:/etc/traefik/config
      - /messier/apps/traefik/letsencrypt:/letsencrypt
    command:
      # Global
      - "--global.sendAnonymousUsage=false"
      - "--global.checkNewVersion=false"
      # API and Dashboard
      - "--api.dashboard=true"
      # EntryPoints
      - "--entrypoints.http.address=:80"
      - "--entrypoints.https.address=:443"
      - "--entrypoints.https.http3=true"
      - "--entrypoints.https.http3.advertisedPort=443"
      - "--entryPoints.https.forwardedHeaders.insecure=false"
      - "--entryPoints.https.proxyProtocol.insecure=false"
      - "--entryPoints.https.forwardedHeaders.trustedIPs=10.6.0.0/16,172.0.0.0/8,192.168.0.0/16"
      - "--entryPoints.https.proxyProtocol.trustedIPs=10.6.0.0/16,172.0.0.0/8,192.168.0.0/16"
      # Providers
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.watch=true"
      - "--providers.file.directory=/etc/traefik/config" 
      # ACME (Let's Encrypt)
      - "--certificatesresolvers.le.acme.email=${EMAIL}"
      - "--certificatesresolvers.le.acme.storage=/letsencrypt/acme.json"
      - "--certificatesresolvers.le.acme.httpchallenge=true"
      - "--certificatesresolvers.le.acme.httpchallenge.entrypoint=http"
    labels:
      - "traefik.enable=true"
      # Special router for Let's Encrypt HTTP challenge
      - "traefik.http.routers.acme-challenge.rule=PathPrefix(`/.well-known/acme-challenge/`)"
      - "traefik.http.routers.acme-challenge.entrypoints=http"
      - "traefik.http.routers.acme-challenge.priority=100"
      - "traefik.http.routers.acme-challenge.service=noop@internal"
      # HTTP to HTTPS redirect router - lower priority (10) than the ACME router
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=http"
      - "traefik.http.routers.http-catchall.priority=10"
      - "traefik.http.routers.http-catchall.middlewares=https-redirect"
      - "traefik.http.routers.http-catchall.service=noop@internal"
      # Dashboard configuration only
      - "traefik.http.routers.dashboard.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.entrypoints=https"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=${CERTRESOLVER:+${CERTRESOLVER}}"
      - "traefik.http.routers.dashboard.middlewares=secure-headers@docker,authelia@docker"
      # Define the Authelia middleware for other services to use
      - "traefik.http.middlewares.authelia.forwardAuth.address=http://authelia:9091/api/authz/forward-auth?https://auth.${DOMAIN}"
      - "traefik.http.middlewares.authelia.forwardAuth.trustForwardHeader=true"
      - "traefik.http.middlewares.authelia.forwardAuth.authResponseHeaders=Remote-User,Remote-Groups,Remote-Name,Remote-Email"
      # HTTP to HTTPS redirect middleware
      - "traefik.http.middlewares.https-redirect.redirectscheme.scheme=https"
      - "traefik.http.middlewares.https-redirect.redirectscheme.permanent=true"
      # Secure Headers Middleware (common for all services)
      - "traefik.http.middlewares.secure-headers.headers.sslRedirect=true"
      - "traefik.http.middlewares.secure-headers.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.secure-headers.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.secure-headers.headers.stsPreload=true"
      - "traefik.http.middlewares.secure-headers.headers.stsSeconds=31536000"
      - "traefik.http.middlewares.secure-headers.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.secure-headers.headers.browserXssFilter=true"
      - "traefik.http.middlewares.secure-headers.headers.customRequestHeaders.X-Forwarded-Proto=https"
      # WebSocket Middleware
      - "traefik.http.middlewares.secure-headers.headers.customResponseHeaders.Access-Control-Allow-Origin=*"
      - "traefik.http.middlewares.secure-headers.headers.customResponseHeaders.Access-Control-Allow-Methods=GET,OPTIONS,PUT"
      - "traefik.http.middlewares.secure-headers.headers.customResponseHeaders.Access-Control-Allow-Headers=authorization,content-type"
    ports:
      - "80:80"
      - "443:443/tcp"
      - "443:443/udp"
      - "8080:8080" # Dashboard
    networks:
      virgo:
    restart: unless-stopped

networks:
  virgo:
    external: true
